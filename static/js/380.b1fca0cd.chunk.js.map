{"version":3,"file":"static/js/380.b1fca0cd.chunk.js","mappings":"yOAGaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAMlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kIASpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0TAmBpBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,ylBAwBtBO,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAeW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yH,8BCFzC,EAtDkB,WAChB,IAAMU,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,MAACf,EAAI,CAACgB,SAtBa,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACfP,GACEQ,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAAA,QAAe,GAADC,OAAIF,EAAsBG,KAAKC,KAAI,kBACnD,IACCC,OAAM,WACLJ,EAAAA,OAAAA,QAAe,8BACjB,IAEFV,EAAKe,OACP,EAGgCC,aAAa,MAAKC,SAAA,EAC9CrB,EAAAA,EAAAA,MAACX,EAAK,CAAAgC,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAAC/B,EAAK,CACJgC,KAAK,QACLN,KAAK,QACLO,QAAQ,2EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,wBAGhB3B,EAAAA,EAAAA,MAACX,EAAK,CAAAgC,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAAC/B,EAAK,CACJgC,KAAK,WACLN,KAAK,WACLO,QAAQ,6CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,2BAGhBL,EAAAA,EAAAA,KAAC7B,EAAM,CAAC8B,KAAK,SAAQF,SAAC,WACtBC,EAAAA,EAAAA,KAAC3B,EAAU,CAACiC,GAAG,YAAWP,SAAC,kCAGjC,ECnDA,EAJc,WACZ,OAAOC,EAAAA,EAAAA,KAACO,EAAS,GACnB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border: 1px solid #efefef;\n\n  :placeholder {\n    color: #757575;\n  }\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  :focus {\n    border: 1px solid #000000;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 18px;\n  color: #000000;\n  margin-top: 24px;\n  padding: 1.063em 1.5em;\n  background-color: rgb(239, 239, 239);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border: 1px solid #000000;\n  border-radius: 14px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  :focus {\n     color: yellow;\n    background-color: #3d5de0;;\n    \n  }\n`;\n\nexport const LoggedLink = styled(NavLink)`\n  margin-top: 8px;\n  color: #8f8f8f;\n  cursor: pointer;\n\n  &:hover,\n  :focus {\n    color: #fabb18;\n  }\n`;","import { Notify } from 'notiflix';\nimport { Form, Input, Label, Button, LoggedLink } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome back!`);\n      })\n      .catch(() => {\n        Notify.failure('Incorrect login or password');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Enter email ...\"\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^[a-zA-Z0-9!@#$%^&*()-_=+`~[\\]{}|:<>/?]+$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          required\n          placeholder=\"Enter password ...\"\n        />\n      </Label>\n      <Button type=\"submit\">LogIn</Button>\n      <LoggedLink to=\"/register\">Don`t have acount? Register</LoggedLink>\n    </Form>\n  );\n};\n\nexport default LoginForm;","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","LoggedLink","NavLink","_templateObject5","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","unwrap","then","originalPromiseResult","Notify","concat","user","name","catch","reset","autoComplete","children","_jsx","type","pattern","title","required","placeholder","to","LoginForm"],"sourceRoot":""}